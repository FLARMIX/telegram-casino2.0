from aiogram import Bot
from aiogram.types import Message
from aiogram.filters import Command
from aiogram.utils.markdown import hlink
from sqlalchemy.ext.asyncio import AsyncSession

from database.methods import get_user_by_tguserid, get_user_stat, check_user_in, update_user
from handlers.init_router import router

from scripts.scripts import Scripts


@router.message(Command("—Ä—É–ª–µ—Ç–∫–∞"))
@router.message(Command("roulette"))
async def roulette(message: Message, bot: Bot, session: AsyncSession):
    scr = Scripts()

    command, stack, amount = message.text.lower().split()
    user = await get_user_by_tguserid(session, message.from_user.id)
    user_id = user.tguserid

    tg_username = await get_user_stat(session, user_id, "tgusername")
    tg_username = tg_username[1:]

    balance_main = user.balance_main
    is_hidden = user.is_hidden
    username = user.username

    if is_hidden:
        formated_username = username
    else:
        formated_username = hlink(f'{username}', f'https://t.me/{tg_username}')

    user_channel_status = await scr.check_channel_subscription(bot, user_id)

    if not user_channel_status:
        await message.answer('–í—ã –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ –∫–∞–Ω–∞–ª, –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –º–æ–π –∫–∞–Ω–∞–ª @PidorsCasino'
                             '\n–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –±–æ—Ç—É, –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –º–æ–π –∫–∞–Ω–∞–ª.',
                             reply_to_message_id=message.message_id)
        return

    if not await check_user_in(session, user_id):
        await message.answer("–í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å —Å –ø–æ–º–æ—â—å—é /register",
                             reply_to_message_id=message.message_id)
        return
    else:

        if amount in ['–≤—Å–µ', '–≤—Å—ë']:
            amount = str(balance_main)

        int_amount = scr.unformat_number(scr.amount_changer(amount))

        if int_amount <= 0:
            await message.answer("–°—É–º–º–∞ —Å—Ç–∞–≤–∫–∏ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –±–æ–ª—å—à–µ 0!",
                                 reply_to_message_id=message.message_id)
            return

        if balance_main < int_amount:
            await message.answer(f"–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!\n–í–∞—à –±–∞–ª–∞–Ω—Å {scr.amount_changer(str(balance_main))}",
                                 reply_to_message_id=message.message_id)
            return

        await update_user(session, "balance_main", balance_main - int_amount, user_id)

        if stack in ['—á–µ—Ä–Ω–æ–µ', '—á—ë—Ä–Ω–æ–µ', '–∫—Ä–∞—Å–Ω–æ–µ', '—á–µ—Ç', '—á—ë—Ç', '–Ω–µ—á–µ—Ç', '–Ω–µ—á—ë—Ç']:
            status, number = scr.roulette_randomizer(stack)
            current_stack = scr.pic_color(number)
            print(status, number, current_stack)
            if status:
                before_balance = await get_user_stat(session, user_id, "balance_main")
                await update_user(session, 'balance_main', before_balance + int_amount * 2, user_id)
                current_balance = await get_user_stat(session, user_id, "balance_main")

                await message.answer(f"{formated_username}, {number} - {current_stack.capitalize()}! –°—Ç–∞–≤–∫–∞ x2 "
                                     f"{scr.randomize_emoji(win=True)}, –≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ "
                                     f"{scr.amount_changer(str(int_amount * 2))}$"
                                     f"\n–ë–∞–ª–∞–Ω—Å: {scr.amount_changer(str(current_balance))}$",
                                     disable_web_page_preview=True, reply_to_message_id=message.message_id)
                await update_user(session, "balance_main", balance_main + int_amount, user_id)
            else:
                current_balance = await get_user_stat(session, user_id, 'balance_main')
                await message.answer(f"{formated_username}, {number} - {current_stack.capitalize()}! –í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ "
                                     f"{scr.amount_changer(str(int_amount))}$ {scr.randomize_emoji(win=False) * 2}"
                                     f"\n–ë–∞–ª–∞–Ω—Å: {scr.amount_changer(str(current_balance))}$",
                                     disable_web_page_preview=True, reply_to_message_id=message.message_id)
        elif stack in ['–∑–µ—Ä–æ']:
            status, number = scr.roulette_randomizer(stack)
            current_stack = scr.pic_color(number)
            print(status, number, current_stack)
            if status:
                before_balance = await get_user_stat(session, user_id, "balance_main")
                await update_user(session, 'balance_main', before_balance + int_amount * 36, user_id)
                current_balance = await get_user_stat(session, user_id, "balance_main")

                await message.answer(f"{formated_username}, {number} - {current_stack.capitalize()}! –°—Ç–∞–≤–∫–∞ x36ü§ë!!! "
                                     f"–≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ "
                                     f"{scr.amount_changer(str(int_amount * 36))}$"
                                     f"\n–ë–∞–ª–∞–Ω—Å: {scr.amount_changer(str(current_balance))}$",
                                     disable_web_page_preview=True, reply_to_message_id=message.message_id)
            else:
                current_balance = await get_user_stat(session, user_id, 'balance_main')
                await message.answer(f"{formated_username}, {number} - {current_stack.capitalize()}! –í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ "
                                     f"{scr.amount_changer(str(int_amount))}$ {scr.randomize_emoji(win=False) * 2}"
                                     f"\n–ë–∞–ª–∞–Ω—Å: {scr.amount_changer(str(current_balance))}$",
                                     disable_web_page_preview=True, reply_to_message_id=message.message_id)
        else:
            await message.answer(f"–û—à–∏–±–∫–∞! –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ —É–∫–∞–∑–∞–Ω —Å—Ç–µ–∫. –í—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å '—á–µ—Ä–Ω–æ–µ', "
                                 f"'—á—ë—Ä–Ω–æ–µ', '–∫—Ä–∞—Å–Ω–æ–µ', '—á–µ—Ç', '—á—ë—Ç', '–Ω–µ—á–µ—Ç', '–Ω–µ—á—ë—Ç' –∏–ª–∏ '–∑–µ—Ä–æ'.",
                                 reply_to_message_id=message.message_id)
